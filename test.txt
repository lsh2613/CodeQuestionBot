# 2. 테라폼 기본 사용

이 장에서는 Terraform 사용 방법의 기본 사항을 배우게 됩니다. 배우기 쉬운 도구이므로 첫 번째 Terraform 명령 실행부터 Terraform을 사용하여 서버 전체에 트래픽을 분산하는 로드 밸런서가 있는 서버 클러스터 배포까지 진행하게 됩니다. 이 인프라는 확장 가능하고 가용성이 높은 웹 서비스를 실행하기 위한 좋은 시작점입니다. 후속 장에서는 이 예제를 더욱 발전시킬 것입니다. Terraform은 AWS, Azure, Google Cloud, DigitalOcean과 같은 퍼블릭 클라우드 제공업체는 물론 OpenStack, VMware와 같은 프라이빗 클라우드 및 가상화 플랫폼 전반에 걸쳐 인프라를 프로비저닝할 수 있습니다. 이 장과 나머지 부분에 나오는 거의 모든 코드 예제에서는 AWS를 사용하게 됩니다. AWS는 다음과 같은 이유로 Terraform을 학습하기에 좋은 선택입니다.

- AWS는 현재까지 가장 인기 있는 클라우드 인프라 제공업체입니다. 클라우드 인프라 시장에서 32%의 점유율을 차지하고 있으며 이는 다음 3대 경쟁사(Microsoft, Google, IBM)를 합친 것보다 높습니다.
- AWS는 가상 서버를 배포하는 데 사용할 수 있는 Amazon Elastic Compute Cloud(Amazon EC2)를 포함하여 안정적이고 확장 가능한 광범위한 클라우드 호스팅 서비스를 제공합니다. 가상 서버 클러스터를 보다 쉽게 관리할 수 있게 해주는 ASG(Auto Scaling Group) 가상 서버 클러스터 전체에 트래픽을 분산하는 데 사용할 수 있는 ELB(Elastic Load Balancer)도 있습니다.
- AWS는 첫 해에 이러한 모든 예제를 무료로 또는 매우 저렴한 비용으로 실행할 수 있는 프리 티어를 제공합니다. 프리 티어 크레딧을 이미 사용한 경우에도 이 책의 예시 비용은 몇 달러에 불과합니다.

이전에 AWS나 Terraform을 사용해 본 적이 없더라도 걱정하지 마세요. 이 과정은 두 기술 모두에 대한 초보자를 위해 설계되었습니다. 이번 챕터에서는 다음 단계를 안내해 드립니다.

- AWS 계정 설정
- Terraform 설치
- 단일 서버 배포
- 단일 웹 서버 배포
- 구성 가능한 웹 서버 배포
- 웹 서버 클러스터 배포
- 로드 밸런서 배포
- 자원 반환

AWS 계정 설정 아직 AWS 계정이 없다면 [https://aws.amazon.com으로](https://aws.amazon.xn--com-ky7m580d/) 가서 가입하십시오. AWS에 처음 등록할 때 처음에는 루트 사용자로 로그인합니다. 이 사용자 계정에는 계정에서 절대적으로 모든 작업을 수행할 수 있는 액세스 권한이 있으므로 보안 관점에서 매일 루트 사용자를 사용하는 것은 좋은 생각이 아닙니다. 실제로 루트 사용자를 사용해야 하는 유일한 방법은 더 제한된 권한을 가진 다른 사용자 계정을 만든 다음 해당 계정 중 하나로 즉시 전환하는 것입니다. 

더 제한된 사용자 계정을 생성하려면 IAM(Identity and Access Management) 서비스를 사용해야 합니다. IAM은 사용자 계정과 각 사용자의 권한을 관리하는 곳입니다. 새 IAM 사용자를 생성하려면 IAM 콘솔로 이동하여 사용자를 클릭한 다음 사용자 추가 버튼을 클릭합니다. 사용자의 이름을 입력하고 그림과 같이 "액세스 키 - 프로그래밍 방식 액세스"가 선택되어 있는지 확인합니다.
